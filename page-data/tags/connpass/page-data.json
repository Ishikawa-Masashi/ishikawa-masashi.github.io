{"componentChunkName":"component---src-templates-tags-template-tsx","path":"/tags/connpass/","result":{"pageContext":{"nodes":[{"html":"<h2 id=\"なにこれ\" style=\"position:relative;\"><a href=\"#%E3%81%AA%E3%81%AB%E3%81%93%E3%82%8C\" aria-label=\"なにこれ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>なにこれ</h2>\n<p>Gatsby製のサイトでConnpassのイベントを表示しなければならず、<a href=\"https://connpass.com/about/api/\">Conpass API</a>を使ったのですが、こちらのAPIではサムネイル画像が取得できません。そのためサムネイルはスクレイピングで取得するようにしました。取得自体は単純なNode.jsのスクリプトなので割と使いまわしが効くと思います。今回はその備忘録です。ついでにGatsbyのローカルプラグインにする方法もご紹介します。</p>\n<h2 id=\"connpass-api所感\" style=\"position:relative;\"><a href=\"#connpass-api%E6%89%80%E6%84%9F\" aria-label=\"connpass api所感 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connpass API所感</h2>\n<p>少しだけ使いづらいです。<br/>\n今回、グループに紐づくイベントを取得したかったので<code class=\"language-text\">series_id</code>を指定しましたが、Connpassのグループの画面からは<code class=\"language-text\">series_id</code>がわからず、グループに紐づくイベントをConnpass APIで叩いて、そのレスポンスの<code class=\"language-text\">series_id</code>を確認する必要がありました。<br/>\n日付の範囲指定が独特で、From Toではなく、年月または年月日を整数で複数指定しなければなりません。\n2020年1月から3月までのイベントを取得する場合は<code class=\"language-text\">ym=202001, 202001, 202003</code>のような感じです。<br/>\nなお取得件数のデフォルトは10件なので、たくさんイベントを取得する場合は100件を指定する必要があります。</p>\n<p>そしてサムネイル画像の情報がレスポンスで返ってきません。\n返ってきても良さそうですが、<a href=\"https://connpass.com/about/api/\">Connpass APIのページ</a>で紹介されているAPIを使っているサービスを見ても、サムネイル画像を表示しているサービスはなかったで、おそらくAPIでは取得できないのでしょう。</p>\n<h2 id=\"現在月前後のイベントを取得するための検索条件\" style=\"position:relative;\"><a href=\"#%E7%8F%BE%E5%9C%A8%E6%9C%88%E5%89%8D%E5%BE%8C%E3%81%AE%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E6%A4%9C%E7%B4%A2%E6%9D%A1%E4%BB%B6\" aria-label=\"現在月前後のイベントを取得するための検索条件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>現在月前後のイベントを取得するための検索条件</h2>\n<p>先に述べた通り日付の検索条件が独特で、\nここでは、現在月から過去Xヶ月、未来Yヶ月の範囲を指定する方法を示します。\n念の為、どんなロケーションでも正しく動くように<a href=\"https://date-fns.org/\">date-fns</a>という日時ライブラリを使っています。</p>\n<div class=\"gatsby-code-title\">param-of-month-range.js(Connpass</div>\n<div class=\"gatsby-highlight\" data-language=\"jsapiの年月のパラメータを生成する処理)\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsapiの年月のパラメータを生成する処理) line-numbers\"><code class=\"language-jsapiの年月のパラメータを生成する処理)\">// 時間計算などの処理は日本のタイムゾーンで行う\nconst TIME_ZONE_FOR_CONNPASS_API = &#39;Asia/Tokyo&#39;;\nconst YEAR_MONTH_FORMAT_FOR_CONNPASS_API = &#39;YYYYMM&#39;;\nconst { startOfMonth, addMonths, format } = require(&#39;date-fns&#39;);\nconst { convertToTimeZone } = require(&#39;date-fns-timezone&#39;);\n\n// Connpass APIの仕様(https://connpass.com/about/api/)に従って\n// 最近開催された/されるイベントに絞り込むためのパラメーターを生成する\n// 結果は `202001,202002,202003` のような文字列\nfunction paramOfMonthRange(monthRangePast, monthRangeFuture) {\n  const targetYearAndMonths = [];\n  const startOfCurrentMonth = startOfMonth(convertToTimeZone(new Date(), { timeZone: TIME_ZONE_FOR_CONNPASS_API }));\n\n  for(let i = - monthRangePast; i &lt; monthRangeFuture; i++) {\n    const target = addMonths(startOfCurrentMonth, i);\n    const targetStr = format(target, YEAR_MONTH_FORMAT_FOR_CONNPASS_API);\n    targetYearAndMonths.push(targetStr);\n  }\n\n  return targetYearAndMonths.join(&#39;,&#39;);\n}\n\n\nexports.paramOfMonthRange = paramOfMonthRange;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<h2 id=\"サムネイルのスクレイピング\" style=\"position:relative;\"><a href=\"#%E3%82%B5%E3%83%A0%E3%83%8D%E3%82%A4%E3%83%AB%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0\" aria-label=\"サムネイルのスクレイピング permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サムネイルのスクレイピング</h2>\n<p>まずはConnpass APIでイベント情報を取得して、\n取得情報の中のイベントページのURLを元に、<a href=\"https://github.com/cheeriojs/cheerio\">cheerio</a>を使ってイベントページHTMLのheadタグのmeta情報からOGP画像のURLを取得します。\nスクレイピングで503エラーにならないようPromise.allで並列処理で一気に投げることはせず、for文で1つづつ順番にリクエストを送るようにしています。</p>\n<div class=\"gatsby-code-title\">fetch-connpass-events-with-thumbnails.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> axios <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'axios'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> paramOfMonthRange <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./param-of-month-range.js'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://connpass.com/api/v1/event/'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_MIN_FETCH_COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_MAX_FETCH_COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchConnpassEventsWithThumbnails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  eventSeriesIds<span class=\"token punctuation\">,</span>\n  defaultThumbnailUrl<span class=\"token punctuation\">,</span>\n  maxFetchCount<span class=\"token punctuation\">,</span>\n  monthRangePast<span class=\"token punctuation\">,</span>\n  monthRangeFuture<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 引数チェックは省略</span>\n\n  <span class=\"token keyword\">const</span> eventsList <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>eventSeriesIds<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">series_id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BASE_URL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        series_id<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">ym</span><span class=\"token operator\">:</span> <span class=\"token function\">paramOfMonthRange</span><span class=\"token punctuation\">(</span>monthRangePast<span class=\"token punctuation\">,</span> monthRangeFuture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> maxFetchCount<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">attachThumbnailUrl</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">,</span> defaultThumbnailUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> eventsList<span class=\"token punctuation\">.</span><span class=\"token function\">flat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">attachThumbnailUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">events<span class=\"token punctuation\">,</span> defaultThumbnailUrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> eventUrls <span class=\"token operator\">=</span> events<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> event<span class=\"token punctuation\">.</span>event_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> thumbnailUrls <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchThumbnailUrls</span><span class=\"token punctuation\">(</span>eventUrls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 取得したOGP画像のURLをイベント情報にマージ</span>\n  <span class=\"token keyword\">return</span> events<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span>  thumbnail_url <span class=\"token operator\">=</span> thumbnailUrls<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">.</span>event_url<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> defaultThumbnailUrl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> thumbnail_url <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// スクレイピングでHTMLのheadのmeta情報からOGP画像のURLを取得する</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchThumbnailUrls</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eventUrls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 503エラー(リクエスト過多)にならないようPromise.allで並列処理はせず、for文で直列で処理する</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> url <span class=\"token keyword\">of</span> eventUrls<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> html <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> thumbnailUrl <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta[property=\"og:image\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thumbnailUrl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> thumbnailUrl<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">OGP image cloud not found in the url(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">).</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Fetching(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">) for getting thumbnail url failed.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span>fetchConnpassEventsWithThumbnails <span class=\"token operator\">=</span> fetchConnpassEventsWithThumbnails<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<h2 id=\"gatsbyプラグインにする場合\" style=\"position:relative;\"><a href=\"#gatsby%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%AB%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\" aria-label=\"gatsbyプラグインにする場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsbyプラグインにする場合</h2>\n<p>Gatsbyのビルド時にConnpassのイベント情報を取得してコンポーネントのGraphQLのクエリで取得できるようにするためには以下を実施します。</p>\n<ul>\n<li>設定ファイル定義</li>\n<li>gatsby-config.jsでプラグイン登録</li>\n<li>Gatsbyローカルプラグインを作成、この中で先程のスクリプト<code class=\"language-text\">fetch-connpass-events-with-thumbnails.js</code>を使う</li>\n</ul>\n<br/>\n<p>まずはプラグインに渡す引数を設定ファイルで定義します。</p>\n<div class=\"gatsby-code-title\">config/connpass-events.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 自分が取得したいグループIDのSeriesIDを記載する</span>\n  <span class=\"token literal-property property\">eventSeriesIds</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'1234'</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">'5678'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// サムネイルがないを考慮して、デフォルトのサムネイル画像のURLを指定する</span>\n  <span class=\"token literal-property property\">defaultThumbnailUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://hogehoge.com/default-thumbnaile-url.png'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">maxFetchCount</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">monthRangePast</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">monthRangeFuture</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<p>次に<code class=\"language-text\">gatsby-config.js</code>でプラグインを登録します。この時、設定ファイルの値をオプションとして指定します。</p>\n<div class=\"gatsby-code-title\">gatsby-config.js</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> connpassEvents <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./config/conpass-events'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// 中略</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-connpass</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">eventSeriesIds</span><span class=\"token operator\">:</span> connpassEvents<span class=\"token punctuation\">.</span>eventSeriesIds<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">defaultThumbnailUrl</span><span class=\"token operator\">:</span> connpassEvents<span class=\"token punctuation\">.</span>defaultThumbnailUrl<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">maxFetchCount</span><span class=\"token operator\">:</span> connpassEvents<span class=\"token punctuation\">.</span>maxFetchCount<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">monthRangePast</span><span class=\"token operator\">:</span> connpassEvents<span class=\"token punctuation\">.</span>monthRangePast<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">monthRangeFuture</span><span class=\"token operator\">:</span> connpassEvents<span class=\"token punctuation\">.</span>monthRangeFuture<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 中略</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<p>プラグインを定義します。プラグインは<code class=\"language-text\">plugins/プラグイン名</code>のフォルダ配下に定義します。\nNode.jsプロジェクトなので、これの他にもpackage.jsonなどの定義が必要です。</p>\n<div class=\"gatsby-code-title\">plugins/gatsby-source-connpass/gatsby-node.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> fetchConnpassEventsWithThumbnails <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch-connpass-events-with-thumbnails.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">INTERNAL_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'connpassEvent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_MAX_FETCH_COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_MIN_FETCH_COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 指定したイベントグループ(eventSeriesIds)のイベントをサムネイル付きで取得する</span>\nexports<span class=\"token punctuation\">.</span>sourceNodes <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> createNodeId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Plugin options</span>\n  <span class=\"token punctuation\">{</span> \n    eventSeriesIds<span class=\"token punctuation\">,</span>\n    defaultThumbnailUrl<span class=\"token punctuation\">,</span>\n    maxFetchCount<span class=\"token punctuation\">,</span>\n    monthRangePast<span class=\"token punctuation\">,</span>\n    monthRangeFuture<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// 引数チェックは省略</span>\n\n  <span class=\"token keyword\">const</span> events <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchConnpassEventsWithThumbnails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    eventSeriesIds<span class=\"token punctuation\">,</span>\n    defaultThumbnailUrl<span class=\"token punctuation\">,</span>\n    maxFetchCount<span class=\"token punctuation\">,</span>\n    monthRangePast<span class=\"token punctuation\">,</span>\n    monthRangeFuture<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n  <span class=\"token comment\">// Connpassイベント情報をNodeに追加して、</span>\n  <span class=\"token comment\">// コンポーネントからGraphQLのクエリで取得できるようにする</span>\n  events<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> contentDigest <span class=\"token operator\">=</span>\n      crypto<span class=\"token punctuation\">.</span><span class=\"token function\">createHash</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">md5</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">createNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>event<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">thumbnail_url</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>thumbnail_url<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token function\">createNodeId</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">INTERNAL_TYPE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>event_id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">__SOURCE__</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">internal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">INTERNAL_TYPE</span><span class=\"token punctuation\">,</span>\n        contentDigest<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<p>これにより、Gatsbyでビルドする時に、Connpassイベントがサムネイル画像のURL付きでNodeに登録されて、コンポーネントのGraphQLのクエリでConnpassイベントが取得できるようになります。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>所感にも書いた通り、Connpass APIは使いやすいとは言えません。\n標準でサムネイル画像のURLをサポートしてくれたらいいのですが、残念ながらそうではないので、今回のスクリプトを書くに至りました。今後もどこかの場面でこのスクリプトを流用しそうです。ただ、ReactアプリでConnpassのイベントを検索したい場合などのリアルタイム性が求められるユースケースでは、スクレイピングに時間がかかるので、サムネイルだけLazyLoadするような仕組みが必要かと思います🍅</p>\n<h2 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ul>\n<li><a href=\"https://connpass.com/about/api/\">APIリファレンス - connpass</a></li>\n</ul>","excerpt":"なにこれ Gatsby製のサイトでConnpassのイベントを表示しなければならず、Conpass APIを使ったのですが、こちらのAPIではサムネイル画像が取得できません。そのためサムネイルはスクレイピングで取得するようにしました。取得自体は単純なNode.js…","frontmatter":{"slug":"/how-to-fetch-connpass-events-with-thumbnails","title":"Connpass APIでサムネイル付きのイベント情報を取得する方法","date":"2020-06-22T08:00:00.000+09:00","tags":["Connpass","Node.js"],"keywords":["Connpass"],"thumbnail":"thumbnail/2020/06/how-to-fetch-connpass-events-with-thumbnails.png","category":null}}],"tag":"Connpass","tagCounts":[{"text":"Gatsby","size":26},{"text":"キーボード","size":11},{"text":"AutoHotkey","size":10},{"text":"作業効率化","size":10},{"text":"React","size":8},{"text":"Vue.js","size":8},{"text":"GraphQL","size":6},{"text":"AWS","size":5},{"text":"AppSync","size":5},{"text":"Vuetify","size":5},{"text":"GatsbyPlugin","size":4},{"text":"Netlify","size":3},{"text":"VueI18n","size":3},{"text":"WordCloud","size":3},{"text":"d3.js","size":3},{"text":"d3Cloud","size":3},{"text":"kuromoji.js","size":3},{"text":"mdx-deck","size":3},{"text":"データ可視化","size":3},{"text":"勉強会","size":3},{"text":"形態素解析","size":3},{"text":"Apollo Client","size":2},{"text":"Cognito","size":2},{"text":"CrossPlatform","size":2},{"text":"LT","size":2},{"text":"Mobile","size":2},{"text":"Node.js","size":2},{"text":"Nuxt.js","size":2},{"text":"ReactNative","size":2},{"text":"SNS","size":2},{"text":"SRE","size":2},{"text":"VeeValidate","size":2},{"text":"code-surfer","size":2},{"text":"gatsby-image","size":2},{"text":"markdown","size":2},{"text":"mdx","size":2},{"text":"スライド","size":2},{"text":"ブログ","size":2},{"text":"プレゼン","size":2},{"text":"読書感想","size":2},{"text":"Amplify","size":1},{"text":"Axios","size":1},{"text":"CSS","size":1},{"text":"CSSModules","size":1},{"text":"CircleCI","size":1},{"text":"Connpass","size":1},{"text":"Cytoscape.js","size":1},{"text":"DynamoDB","size":1},{"text":"Flutter","size":1},{"text":"Fromik","size":1},{"text":"Gatsby theme","size":1},{"text":"Git","size":1},{"text":"GitHub","size":1},{"text":"Github-Pages","size":1},{"text":"Graphpack","size":1},{"text":"Https化","size":1},{"text":"Hugo","size":1},{"text":"Iframely","size":1},{"text":"Ionic","size":1},{"text":"JJUG CCC","size":1},{"text":"JSON-LD","size":1},{"text":"Java","size":1},{"text":"JavaScript","size":1},{"text":"Kotlin","size":1},{"text":"NetlifyForms","size":1},{"text":"OGP","size":1},{"text":"PWA","size":1},{"text":"RSS","size":1},{"text":"SER","size":1},{"text":"Schema-org","size":1},{"text":"Vim","size":1},{"text":"Vimium","size":1},{"text":"Vuex","size":1},{"text":"Windows","size":1},{"text":"Zapier","size":1},{"text":"clip-path","size":1},{"text":"gatsby-image-sharp","size":1},{"text":"gatsby-plugin-feed","size":1},{"text":"gatsy-image","size":1},{"text":"golang","size":1},{"text":"oEmbed","size":1},{"text":"rehype","size":1},{"text":"remark","size":1},{"text":"serverless","size":1},{"text":"typescript","size":1},{"text":"unified","size":1},{"text":"イベントレポート","size":1},{"text":"カスタムドメイン","size":1},{"text":"デュアルキーボード","size":1},{"text":"パソコン","size":1},{"text":"ブックマーク","size":1},{"text":"ランチャー","size":1},{"text":"埋め込みコード","size":1},{"text":"肩こり","size":1}]}},"staticQueryHashes":["3868140423","4185443638","467257065"],"slicesMap":{}}